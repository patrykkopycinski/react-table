{"version":3,"sources":["components/layout/AppContainer.js","components/layout/GlobalStyle.js","components/table/TableHeader.js","components/table/TableCellInput.js","components/buttons/Button.js","components/buttons/DeleteButton.js","components/table/TableColumnHeader.js","components/table/TableWrapper.js","components/table/TableColumn.js","components/table/TableRow.js","components/buttons/AddButton.js","components/table/Table.js","components/csvutils.js","components/layout/AddRowSection.js","components/buttons/ExportCSVButton.js","components/buttons/CreateTableButton.js","reducer.js","utils.js","constants.js","actions.js","App.js","index.js"],"names":["AppContainer","styled","div","_templateObject","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","TableHeader","thead","TableHeader_templateObject","StyledInput","input","TableCellInput_templateObject","TableCellInput","_ref","initialValue","onChange","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_useDebouncedCallback","useDebouncedCallback","debouncedCallback","react_default","a","createElement","defaultValue","event","target","onBlur","defaultProps","Button","button","Button_templateObject","StyledButton","DeleteButton_templateObject","memo","props","index_esm","StyledColumnHeader","th","TableColumnHeader_templateObject","StyledContent","_templateObject2","TableColumnHeader","columnId","columnName","onDeleteColumn","onNameChange","handleNameChange","useCallback","handleDelete","table_TableCellInput","buttons_DeleteButton","onClick","TableWrapper","table","TableWrapper_templateObject","TableColumn","td","TableColumn_templateObject","TablerRowWrapper","tr","TableRow_templateObject","TableRow","columns","data","id","onInputChange","onDeleteClick","map","column","table_TableColumn","key","newValue","AddButton_templateObject","AddButton_StyledButton","Table","dispatch","rows","onUpdateRowField","onUpdateColumnField","onDeleteRow","onAddColumn","columnEntries","entries","columnKeys","_ref2","_ref3","rowEntries","handleColumnNameChange","handleRowFieldChange","rowId","fieldName","handleColumnDelete","handleRowDelete","table_TableWrapper","table_TableHeader","_ref4","_ref5","table_TableColumnHeader","buttons_AddButton","_ref6","_ref7","table_TableRow","exportCSV","rowsArray","values","row","getRowsWithExistingColumns","join","getColumnsCSVContent","reduce","acc","item","getRowsCSVContent","StyledSection","AddRowSection_templateObject","ExportCSVButton_templateObject","ExportCSVButton_StyledButton","CreateTableButton_templateObject","CreateTableButton_StyledButton","initialState","i","rowsCount","arguments","length","undefined","state","uuid","getInitialRowsState","product","calories","fat","protein","reducer","action","type","objectSpread","update","$merge","defineProperty","payload","field","$set","$unset","addRow","updateRow","deleteRow","addColumn","updateColumn","deleteColumn","resetTable","App","_useReducer","useReducer","_useReducer2","_useReducer2$","handelCreateTable","handleAddRow","handleAddColumn","handleExportCSV","csvContent","blob","Blob","FileSaver","saveAs","downloadCSV","hasColumns","keys","layout_AppContainer","layout_GlobalStyle","buttons_CreateTableButton","react","table_Table","layout_AddRowSection","buttons_ExportCSVButton","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f9cef17b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst AppContainer = styled.div`\n  text-align: center;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nexport default AppContainer;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    color: '#fff',\n  }\n`;\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nconst TableHeader = styled.thead`\n  border: 1px solid #333;\n`;\n\nexport default TableHeader;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useDebouncedCallback } from 'use-debounce';\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: 0;\n  padding: 10px;\n  font-size: inherit;\n  box-sizing: border-box;\n`;\n\nconst TableCellInput = ({ initialValue, onChange }) => {\n  const [value, setValue] = useState(initialValue);\n  const [debouncedCallback] = useDebouncedCallback(value => {\n    setValue(value);\n    onChange(value);\n  }, 300);\n  const handleOnChange = event => debouncedCallback(event.target.value);\n  const handleOnBlur = event => onChange(event.target.value);\n\n  return (\n    <StyledInput\n      defaultValue={value}\n      onChange={handleOnChange}\n      onBlur={handleOnBlur}\n    />\n  );\n};\n\nTableCellInput.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nTableCellInput.defaultProps = {\n  initialValue: '',\n};\n\nexport default TableCellInput;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  cursor: pointer;\n  background: none;\n  border: 0;\n  font-size: inherit;\n\n  &:focus {\n    outline: 0;\n  }\n\n  svg {\n    display: block;\n  }\n`;\n\nexport default Button;\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { MdDelete } from 'react-icons/md';\nimport Button from './Button';\n\nconst StyledButton = styled(Button)`\n  color: #333;\n\n  &:hover {\n    color: #b71f1f;\n  }\n`;\n\nconst DeleteButton = props => (\n  <StyledButton {...props}>\n    <MdDelete />\n  </StyledButton>\n);\n\nexport default memo(DeleteButton);\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport TableCellInput from './TableCellInput';\nimport DeleteButton from '../buttons/DeleteButton';\n\nconst StyledColumnHeader = styled.th`\n  padding: 8px;\n  background-color: #fde9d9;\n  font-size: 20px;\n  border-width: 1px;\n  border-style: solid;\n  border-color: #f79646 #ccc;\n`;\n\nconst StyledContent = styled.div`\n  display: flex;\n`;\n\nconst TableColumnHeader = ({\n  columnId,\n  columnName,\n  onDeleteColumn,\n  onNameChange,\n}) => {\n  const handleNameChange = useCallback(value => onNameChange(columnId, value), [\n    onNameChange,\n    columnId,\n  ]);\n\n  const handleDelete = useCallback(() => onDeleteColumn(columnId), [\n    onDeleteColumn,\n    columnId,\n  ]);\n\n  return (\n    <StyledColumnHeader>\n      <StyledContent>\n        <TableCellInput initialValue={columnName} onChange={handleNameChange} />{' '}\n        <DeleteButton onClick={handleDelete} />\n      </StyledContent>\n    </StyledColumnHeader>\n  );\n};\n\nexport default TableColumnHeader;\n","import styled from 'styled-components';\n\nconst TableWrapper = styled.table`\n  margin: 0 auto;\n  border-collapse: collapse;\n  background: #fff;\n  border: 1px solid #fff; /*for older IE*/\n  border-style: hidden;\n`;\n\nexport default TableWrapper;\n","import styled from 'styled-components';\n\nconst TableColumn = styled.td`\n  border-width: 1px;\n  border-style: solid;\n  border-color: #f79646 #ccc;\n`;\n\nexport default TableColumn;\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\n\nimport TableColumn from './TableColumn';\nimport TableCellInput from './TableCellInput';\nimport DeleteButton from '../buttons/DeleteButton';\n\nconst TablerRowWrapper = styled.tr`\n  font-size: 14px;\n`;\n\nconst TableRow = ({ columns, data, id, onInputChange, onDeleteClick }) => {\n  const handleDelete = useCallback(() => onDeleteClick(id), [\n    onDeleteClick,\n    id,\n  ]);\n\n  return (\n    <TablerRowWrapper>\n      {columns.map(column => (\n        <TableColumn key={column}>\n          <TableCellInput\n            initialValue={data[column]}\n            onChange={newValue => onInputChange(id, column, newValue)}\n          />\n        </TableColumn>\n      ))}\n      <TableColumn key=\"delete\">\n        <DeleteButton onClick={handleDelete} />\n      </TableColumn>\n    </TablerRowWrapper>\n  );\n};\n\nexport default TableRow;\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\n\nimport Button from './Button';\n\nconst StyledButton = styled(Button)`\n  color: #35da35;\n  font-size: 40px;\n`;\n\nconst AddButton = props => (\n  <StyledButton {...props}>\n    <MdAdd />\n  </StyledButton>\n);\n\nexport default memo(AddButton);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableHeader from './TableHeader';\nimport TableColumnHeader from './TableColumnHeader';\nimport TableWrapper from './TableWrapper';\nimport TableRow from './TableRow';\nimport AddButton from '../buttons/AddButton';\n\nconst Table = ({\n  dispatch,\n  rows,\n  columns,\n  onUpdateRowField,\n  onUpdateColumnField,\n  onDeleteRow,\n  onAddColumn,\n  onDeleteColumn,\n}) => {\n  const columnEntries = Object.entries(columns);\n  const columnKeys = columnEntries.map(([key, value]) => key);\n  const rowEntries = Object.entries(rows);\n\n  const handleColumnNameChange = (columnId, newValue) =>\n    dispatch(onUpdateColumnField(columnId, newValue));\n\n  const handleRowFieldChange = (rowId, fieldName, newValue) =>\n    dispatch(onUpdateRowField(rowId, fieldName, newValue));\n\n  const handleColumnDelete = useCallback(\n    columnId => dispatch(onDeleteColumn(columnId)),\n    [dispatch, onDeleteColumn]\n  );\n\n  const handleRowDelete = useCallback(rowId => dispatch(onDeleteRow(rowId)), [\n    dispatch,\n    onDeleteRow,\n  ]);\n\n  return (\n    <TableWrapper>\n      <TableHeader>\n        <tr>\n          {columnEntries.map(([key, value]) => (\n            <TableColumnHeader\n              onDeleteColumn={handleColumnDelete}\n              onNameChange={handleColumnNameChange}\n              key={key}\n              columnId={key}\n              columnName={value}\n            />\n          ))}\n          <td key=\"addColumn\">\n            <AddButton onClick={onAddColumn} />\n          </td>\n        </tr>\n      </TableHeader>\n      <tbody>\n        {rowEntries.map(([key, value]) => (\n          <TableRow\n            key={key}\n            columns={columnKeys}\n            id={key}\n            data={value}\n            onInputChange={handleRowFieldChange}\n            onDeleteClick={handleRowDelete}\n          />\n        ))}\n      </tbody>\n    </TableWrapper>\n  );\n};\n\nTable.propTypes = {\n  rows: PropTypes.object.isRequired,\n  columns: PropTypes.object.isRequired,\n  onUpdateRowField: PropTypes.func.isRequired,\n  onUpdateColumnField: PropTypes.func.isRequired,\n  onAddColumn: PropTypes.func.isRequired,\n  onDeleteRow: PropTypes.func.isRequired,\n  onDeleteColumn: PropTypes.func.isRequired,\n};\n\nexport default Table;\n","import FileSaver from 'file-saver';\n\nexport function getColumnsCSVContent(columns) {\n  return columns.map(([key, value]) => value).join(',') + '\\n';\n}\n\nexport function getRowsWithExistingColumns(rows, columns) {\n  return Object.values(rows).map(row => columns.map(([key]) => row[key]));\n}\n\nexport function getRowsCSVContent(rows) {\n  return rows\n    .map(row => row.join(','))\n    .reduce((acc, item) => acc + item + '\\n', '');\n}\n\nexport function downloadCSV(csvContent) {\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8' });\n\n  FileSaver.saveAs(blob, 'data.txt');\n}\n\nexport function exportCSV(columns, rows) {\n  const columnEntries = Object.entries(columns);\n  const rowsArray = getRowsWithExistingColumns(rows, columnEntries);\n\n  const columnsCSVContent = getColumnsCSVContent(columnEntries);\n  const rowsCCVContent = getRowsCSVContent(rowsArray);\n\n  return columnsCSVContent + rowsCCVContent;\n}\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\n\nconst StyledSection = styled.div`\n  margin-bottom: 16px;\n  text-align: right;\n`;\n\nconst AddRowSection = props => <StyledSection {...props} />;\n\nexport default memo(AddRowSection);\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { MdFileDownload } from 'react-icons/md';\nimport Button from './Button';\n\nconst StyledButton = styled(Button)`\n  width: 300px;\n  background: #333;\n  color: #fff;\n  font-size: 20px;\n  line-height: 32px;\n\n  &:hover {\n    background: #61dafb;\n  }\n\n  svg {\n    display: inline-block;\n    vertical-align: middle;\n  }\n`;\n\nconst ExportCSVButton = props => (\n  <StyledButton {...props}>\n    {'Export data as CSV '}\n    <MdFileDownload />\n  </StyledButton>\n);\n\nexport default memo(ExportCSVButton);\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\n\nconst StyledButton = styled(Button)`\n  font-size: 24px;\n  color: #fff;\n  padding: 8px 16px;\n  background: #35da35;\n`;\n\nconst CreateTableButton = ({ onClick }) => (\n  <StyledButton onClick={onClick}>Create Table</StyledButton>\n);\n\nexport default memo(CreateTableButton);\n","import uuid from 'uuid/v4';\nimport update from 'immutability-helper';\n\nimport {\n  ADD_ROW,\n  ADD_COLUMN,\n  UPDATE_ROW,\n  UPDATE_COLUMN,\n  DELETE_ROW,\n  DELETE_COLUMN,\n  RESET_TABLE,\n} from './constants';\nimport { getInitialRowsState } from './utils';\n\nimport { INITIAL_COLUMNS } from './constants';\n\nexport const initialState = {\n  rows: getInitialRowsState(),\n  columns: INITIAL_COLUMNS,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ROW:\n      return {\n        ...state,\n        rows: update(state.rows, {\n          $merge: {\n            [uuid()]: {},\n          },\n        }),\n      };\n    case UPDATE_ROW:\n      return {\n        ...state,\n        rows: update(state.rows, {\n          [action.payload.rowId]: {\n            [action.payload.field]: {\n              $set: action.payload.value,\n            },\n          },\n        }),\n      };\n    case DELETE_ROW:\n      return {\n        ...state,\n        rows: update(state.rows, {\n          $unset: [action.payload],\n        }),\n      };\n    case ADD_COLUMN:\n      return {\n        ...state,\n        columns: update(state.columns, {\n          $merge: {\n            [uuid()]: '',\n          },\n        }),\n      };\n    case UPDATE_COLUMN:\n      return {\n        ...state,\n        columns: update(state.columns, {\n          [action.payload.columnId]: {\n            $set: action.payload.value,\n          },\n        }),\n      };\n    case DELETE_COLUMN:\n      return {\n        ...state,\n        columns: update(state.columns, {\n          $unset: [action.payload],\n        }),\n      };\n    case RESET_TABLE:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import uuid from 'uuid/v4';\n\nconst INITIAL_ROWS_COUNT = 5;\n\nexport const getInitialRowsState = (rowsCount = INITIAL_ROWS_COUNT) => {\n  let i;\n  let state = {};\n\n  for (i = 0; i < rowsCount; i++) {\n    const id = uuid();\n    state[id] = {};\n  }\n\n  return state;\n};\n","export const ADD_ROW = 'ADD_ROW';\nexport const ADD_COLUMN = 'ADD_COLUMN';\nexport const UPDATE_ROW = 'UPDATE_ROW';\nexport const UPDATE_COLUMN = 'UPDATE_COLUMN';\nexport const DELETE_ROW = 'DELETE_ROW';\nexport const DELETE_COLUMN = 'DELETE_COLUMN';\nexport const RESET_TABLE = 'RESET_TABLE';\n\nexport const INITIAL_COLUMNS = {\n  product: 'Product (100g serving)',\n  calories: 'Calories',\n  fat: 'Fat (g)',\n  protein: 'Protein (g)',\n};\n\nexport const INITIAL_ROWS_COUNT = 5;\n","import {\n  ADD_ROW,\n  ADD_COLUMN,\n  UPDATE_ROW,\n  UPDATE_COLUMN,\n  DELETE_ROW,\n  DELETE_COLUMN,\n  RESET_TABLE,\n} from './constants';\n\nexport const addRow = () => ({\n  type: ADD_ROW,\n});\n\nexport const updateRow = (rowId, field, value) => ({\n  type: UPDATE_ROW,\n  payload: {\n    rowId,\n    field,\n    value,\n  },\n});\n\nexport const deleteRow = payload => ({\n  type: DELETE_ROW,\n  payload,\n});\n\nexport const addColumn = () => ({\n  type: ADD_COLUMN,\n});\n\nexport const updateColumn = (columnId, value) => ({\n  type: UPDATE_COLUMN,\n  payload: {\n    columnId,\n    value,\n  },\n});\n\nexport const deleteColumn = payload => ({\n  type: DELETE_COLUMN,\n  payload,\n});\n\nexport const resetTable = () => ({\n  type: RESET_TABLE,\n});\n","import React, { Fragment, useCallback, useReducer } from 'react';\n\nimport AppContainer from './components/layout/AppContainer';\nimport GlobalStyle from './components/layout/GlobalStyle';\nimport Table from './components/table/Table';\nimport { downloadCSV, exportCSV } from './components/csvutils';\nimport AddRowSection from './components/layout/AddRowSection';\nimport ExportCSVButton from './components/buttons/ExportCSVButton';\nimport CreateTableButton from './components/buttons/CreateTableButton';\n\nimport reducer, { initialState } from './reducer';\nimport {\n  addRow,\n  updateRow,\n  deleteRow,\n  addColumn,\n  updateColumn,\n  deleteColumn,\n  resetTable,\n} from './actions';\n\nimport AddButton from './components/buttons/AddButton';\n\nfunction App() {\n  const [{ rows, columns }, dispatch] = useReducer(reducer, initialState);\n\n  const handelCreateTable = useCallback(() => {\n    dispatch(resetTable());\n  }, []);\n\n  const handleAddRow = useCallback(() => {\n    dispatch(addRow());\n  }, []);\n\n  const handleAddColumn = useCallback(() => {\n    dispatch(addColumn());\n  }, []);\n\n  const handleExportCSV = useCallback(() => {\n    const csvContent = exportCSV(columns, rows);\n\n    downloadCSV(csvContent);\n  }, [columns, rows]);\n\n  const hasColumns = Object.keys(columns).length;\n\n  return (\n    <AppContainer>\n      <GlobalStyle />\n      <div>\n        {!hasColumns && (\n          <div>\n            <CreateTableButton onClick={handelCreateTable} />\n          </div>\n        )}\n        {hasColumns && (\n          <Fragment>\n            <Table\n              dispatch={dispatch}\n              rows={rows}\n              columns={columns}\n              onUpdateRowField={updateRow}\n              onUpdateColumnField={updateColumn}\n              onDeleteRow={deleteRow}\n              onDeleteColumn={deleteColumn}\n              onAddColumn={handleAddColumn}\n            />\n            <AddRowSection>\n              <AddButton onClick={handleAddRow} />\n            </AddRowSection>\n            <div>\n              <ExportCSVButton onClick={handleExportCSV} />\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["components/layout/AppContainer.js","components/layout/GlobalStyle.js","components/table/TableHeader.js","components/table/TableColumnHeader.js","components/table/TableColumnHeaderContent.js","components/table/TableWrapper.js","components/table/TableCellInput.js","components/table/TableColumn.js","components/buttons/Button.js","components/buttons/DeleteButton.js","components/table/TableRow.js","components/buttons/AddButton.js","components/table/Table.js","components/csvutils.js","components/constants.js","components/layout/AddRowSection.js","components/buttons/ExportCSVButton.js","components/buttons/CreateTableButton.js","components/utils.js","App.js","index.js"],"names":["AppContainer","styled","div","_templateObject","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","props","whiteColor","TableHeader","thead","TableHeader_templateObject","ColumnHeader","th","TableColumnHeader_templateObject","TableColumnHeaderContent","TableColumnHeaderContent_templateObject","TableWrapper","table","TableWrapper_templateObject","StyledInput","input","TableCellInput_templateObject","TableCellInput","_ref","initialValue","onChange","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_useDebouncedCallback","useDebouncedCallback","debouncedCallback","react_default","a","createElement","defaultValue","event","target","onBlur","defaultProps","TableColumn","td","TableColumn_templateObject","Button","button","Button_templateObject","StyledButton","DeleteButton_templateObject","DeleteButton","index_esm","TablerRowWrapper","tr","TableRow_templateObject","TableRow","columns","data","id","onInputChange","onDeleteClick","map","column","table_TableColumn","key","table_TableCellInput","buttons_DeleteButton","onClick","AddButton_templateObject","AddButton","AddButton_StyledButton","Table","rows","onUpdateRowField","onUpdateColumnField","onDeleteRow","onAddColumn","onDeleteColumn","columnEntries","entries","columnKeys","_ref2","_ref3","rowEntries","table_TableWrapper","table_TableHeader","_ref4","_ref5","TableColumnHeader","table_TableColumnHeaderContent","bind","buttons_AddButton","_ref6","_ref7","table_TableRow","exportCSV","rowsArray","values","row","getRowsWithExistingColumns","join","getColumnsCSVContent","reduce","acc","item","getRowsCSVContent","INITIAL_COLUMNS","product","calories","fat","protein","INITIAL_ROWS","StyledSection","AddRowSection_templateObject","AddRowSection","ExportCSVButton_templateObject","ExportCSVButton","ExportCSVButton_StyledButton","CreateTableButton_templateObject","CreateTableButton","CreateTableButton_StyledButton","addItem","collection","uuid","update","$merge","defineProperty","deleteItem","$unset","App","initialRows","i","rowsCount","arguments","length","undefined","state","getInitialRowsState","setColumns","_useState3","_useState4","setRows","hasColumns","keys","layout_AppContainer","layout_GlobalStyle","buttons_CreateTableButton","react","table_Table","rowId","field","updatedRows","$set","updateRowField","columnId","updatedColumns","updateColumnField","newRows","newColumns","layout_AddRowSection","buttons_ExportCSVButton","csvContent","blob","Blob","type","FileSaver","saveAs","downloadCSV","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8947f45d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst AppContainer = styled.div`\n    text-align: center;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color: white;\n`;\n\nexport default AppContainer;\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    color: ${props => (props.whiteColor ? 'white' : 'black')};\n  }\n`\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nconst TableHeader = styled.thead`\n    border: 1px solid #333;\n`;\n\nexport default TableHeader;\n","import styled from 'styled-components';\n\nconst ColumnHeader = styled.th`\n    padding: 8px;\n    background-color: #fde9d9;\n    font-size: 20px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: #f79646 #ccc;\n`\n\nexport default ColumnHeader;\n","import styled from 'styled-components';\n\nconst TableColumnHeaderContent = styled.div`\n    display: flex;\n`\n\nexport default TableColumnHeaderContent;\n","import styled from 'styled-components';\n\nconst TableWrapper = styled.table`\n    margin: 0 auto;\n    border-collapse: collapse;\n    background: #fff;\n    border: 1px solid #fff; /*for older IE*/\n    border-style: hidden;\n`\n\nexport default TableWrapper;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useDebouncedCallback } from 'use-debounce';\n\nconst StyledInput = styled.input`\n    width: 100%;\n    border: 0;\n    padding: 10px;\n    font-size: inherit;\n    box-sizing: border-box;\n`;\n\nconst TableCellInput = ({ initialValue, onChange }) => {\n    const [value, setValue] = useState(initialValue);\n    const [debouncedCallback] = useDebouncedCallback(\n        (value) => {\n          setValue(value);\n          onChange(value);\n        },\n        300,\n    );\n    const handleOnChange = (event) => debouncedCallback(event.target.value);\n    const handleOnBlur = (event) => onChange(event.target.value);\n\n    return (\n        <StyledInput\n            defaultValue={value}\n            onChange={handleOnChange}\n            onBlur={handleOnBlur}\n        />\n    );\n};\n\nTableCellInput.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n};\n\nTableCellInput.defaultProps = {\n    initialValue: '',\n};\n\nexport default TableCellInput;","import styled from 'styled-components';\n\nconst TableColumn = styled.td`\n    border-width: 1px;\n    border-style: solid;\n    border-color: #f79646 #ccc;\n`;\n\nexport default TableColumn;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n    cursor: pointer;\n    background: none;\n    border: 0;\n    font-size: inherit;\n\n    &:focus {\n        outline: 0;\n    }\n    \n    svg {\n        display: block;\n    }\n`;\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MdDelete } from 'react-icons/md';\nimport Button from './Button';\n\nconst StyledButton = styled(Button)`\n    color: #333;\n\n    &:hover {\n        color: #b71f1f;\n    }\n`;\n\nconst DeleteButton = (props) => (\n    <StyledButton {...props}>\n        <MdDelete />\n    </StyledButton>\n);\n\nexport default DeleteButton\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport TableColumn from './TableColumn';\nimport TableCellInput from './TableCellInput';\nimport DeleteButton from '../buttons/DeleteButton';\n\nconst TablerRowWrapper = styled.tr`\n    font-size: 14px;\n`;\n\nconst TableRow = ({ columns, data, id, onInputChange, onDeleteClick }) => (\n    <TablerRowWrapper>\n        {columns.map((column) => (\n            <TableColumn key={column}>\n                <TableCellInput\n                    initialValue={data[column]}\n                    onChange={onInputChange(id, column)}\n                />\n            </TableColumn>\n        ))}\n        <TableColumn key=\"delete\">\n            <DeleteButton onClick={onDeleteClick} />\n        </TableColumn>\n    </TablerRowWrapper>\n);\n\nexport default TableRow;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\n\nimport Button from './Button';\n\nconst StyledButton = styled(Button)`\n    color: #35da35;\n    font-size: 40px;\n`;\n\nconst AddButton = (props) => (\n    <StyledButton {...props}>\n        <MdAdd />\n    </StyledButton>\n);\n\nexport default AddButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableHeader from './TableHeader';\nimport TableColumnHeader from './TableColumnHeader';\nimport TableColumnHeaderContent from './TableColumnHeaderContent';\nimport TableWrapper from './TableWrapper';\nimport TableCellInput from './TableCellInput';\nimport TableRow from './TableRow';\nimport DeleteButton from '../buttons/DeleteButton';\nimport AddButton from '../buttons/AddButton';\n\n\nconst Table = ({ \n    rows,\n    columns,\n    onUpdateRowField,\n    onUpdateColumnField,\n    onDeleteRow,\n    onAddColumn,\n    onDeleteColumn,\n }) => {\n    const columnEntries = Object.entries(columns);\n    const columnKeys = columnEntries.map(([key, value]) => key);\n    const rowEntries = Object.entries(rows);\n    \n    return (\n        <TableWrapper>\n            <TableHeader>\n                <tr>\n                    {columnEntries.map(([key,value]) => (\n                        <TableColumnHeader key={key}>\n                            <TableColumnHeaderContent>\n                                <TableCellInput\n                                    initialValue={value}\n                                    onChange={onUpdateColumnField(key)}\n                                />\n                                {' '}\n                                <DeleteButton onClick={onDeleteColumn.bind(this, key)} />\n                            </TableColumnHeaderContent>\n                        </TableColumnHeader>\n                    ))}\n                    <td key=\"addColumn\">\n                        <AddButton onClick={onAddColumn} />\n                    </td>\n                </tr>    \n            </TableHeader>\n            <tbody>\n                {rowEntries.map(([key, value]) => (\n                    <TableRow\n                        key={key}\n                        columns={columnKeys}\n                        id={key}\n                        data={value}\n                        onInputChange={onUpdateRowField}\n                        onDeleteClick={onDeleteRow.bind(this, key)}\n                    />\n                ))}\n            </tbody>\n        </TableWrapper>\n    )\n};\n\nTable.propTypes = {\n    rows: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired,\n    onUpdateRowField: PropTypes.func.isRequired,\n    onUpdateColumnField: PropTypes.func.isRequired,\n    onAddColumn: PropTypes.func.isRequired,\n    onDeleteRow: PropTypes.func.isRequired,\n    onDeleteColumn: PropTypes.func.isRequired,\n};\n\nexport default Table;","import FileSaver from 'file-saver';\n\nexport function getColumnsCSVContent(columns) {\n    return columns.map(([key, value]) => value).join(',') + '\\n'\n};\n\nexport function getRowsWithExistingColumns(rows, columns) {\n    return Object.values(rows).map((row) => columns.map(([key]) => row[key]));\n}\n\nexport function getRowsCSVContent(rows) {\n    return rows.map((row) => row.join(',')).reduce((acc, item) => acc + item + '\\n', '');\n}\n\nexport function downloadCSV(csvContent) {\n    const blob = new Blob([csvContent], {type: \"text/csv;charset=utf-8\"});\n\n    FileSaver.saveAs(blob, \"data.txt\");\n}\n\nexport function exportCSV(columns, rows) {\n    const columnEntries = Object.entries(columns);\n    const rowsArray = getRowsWithExistingColumns(rows, columnEntries);\n    \n    const columnsCSVContent = getColumnsCSVContent(columnEntries);\n    const rowsCCVContent = getRowsCSVContent(rowsArray);\n\n    return columnsCSVContent + rowsCCVContent;\n};\n","export const INITIAL_COLUMNS = {\n    product: 'Product (100g serving)',\n    calories: 'Calories',\n    fat: 'Fat (g)',\n    protein: 'Protein (g)',\n  };\n  \nexport const INITIAL_ROWS = 5;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSection = styled.div`\n    margin-bottom: 16px;\n    text-align: right;\n`;\n\nconst AddRowSection = (props) => (\n    <StyledSection {...props} />\n);\n\nexport default AddRowSection;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MdFileDownload } from 'react-icons/md'\nimport Button from './Button';\n\nconst StyledButton = styled(Button)`\n    width: 300px;\n    background: #333;\n    color: #fff;\n    font-size: 20px;\n    line-height: 32px;\n\n    &:hover {\n        background: #61dafb;\n    }\n\n    svg {\n        display: inline-block;\n        vertical-align: middle;\n    }\n`;\n\nconst ExportCSVButton = (props) => (\n    <StyledButton {...props}>\n        {'Export data as CSV '}\n        <MdFileDownload />\n    </StyledButton>\n)\n\nexport default ExportCSVButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\n\nconst StyledButton = styled(Button)`\n    font-size: 24px;\n    color: #fff;\n    padding: 8px 16px;\n    background: #35da35;\n`;\n\nconst CreateTableButton = ({ onClick }) => (\n    <StyledButton onClick={onClick}>\n        Create Table\n    </StyledButton>\n)\n\nexport default CreateTableButton;\n","import uuid from 'uuid/v4';\nimport update from 'immutability-helper';\n\nimport { INITIAL_ROWS } from './constants';\n\nexport function getInitialRowsState(rowsCount = INITIAL_ROWS) {\n    let i;\n    let state = {};\n  \n    for (i = 0; i < rowsCount; i++) {\n        const id = uuid();\n        state[id] = {}\n    }\n  \n    return state;\n}\n\nexport function addItem(collection, value) {\n    const id = uuid();\n\n    return update(collection, {\n        $merge: {\n            [id]: value,\n        }\n    })\n}\n\nexport function deleteItem(collection, id) {\n    return update(collection, {\n        $unset: [id]\n    });\n}\n\nexport function updateColumnField(columns, columnId, value) {\n    return update(columns, {\n        [columnId]: {\n            $set: value\n        }\n    })\n}\n\nexport function updateRowField(rows, rowId, field, value) {\n    return update(rows, {\n        [rowId]: {\n            [field]: {\n                $set: value\n            }\n        }\n    });\n}","import React, { Fragment, useState } from 'react';\n\nimport AppContainer from './components/layout/AppContainer';\nimport GlobalStyle from './components/layout/GlobalStyle';\nimport Table from './components/table/Table';\nimport { downloadCSV, exportCSV } from './components/csvutils';\nimport { INITIAL_COLUMNS } from './components/constants'; \nimport AddRowSection from './components/layout/AddRowSection';\nimport ExportCSVButton from './components/buttons/ExportCSVButton';\nimport CreateTableButton from './components/buttons/CreateTableButton';\n\nimport { \n  getInitialRowsState,\n  addItem,\n  deleteItem,\n  updateColumnField, \n  updateRowField,\n} from './components/utils';\nimport AddButton from './components/buttons/AddButton';\n\n\nfunction App() {\n  const initialRows = getInitialRowsState();\n\n  const [columns, setColumns] = useState(INITIAL_COLUMNS);\n  const [rows, setRows] = useState(initialRows);\n\n  const handelCreateTable = () => {\n    setColumns(INITIAL_COLUMNS);\n    setRows(initialRows);\n  }\n\n  const handleAddRow = () => {\n      const updatedRows = addItem(rows, {})\n\n      return setRows(updatedRows);\n  }\n\n  const handleAddColumn = () => {\n      const updatedColumns = addItem(columns, '')\n\n      return setColumns(updatedColumns);\n  }\n\n  const handleUpdateColumnField = (columnId) => (value) => {\n      const updatedColumns = updateColumnField(columns, columnId, value);\n\n      return setColumns(updatedColumns);\n  };\n\n  const handleUpdateRowField = (rowId, field) => (value) => {\n      const updatedRows = updateRowField(rows, rowId, field, value);\n\n      return setRows(updatedRows);\n  }\n\n  const handleDeleteRow = (rowId) => {\n      const newRows = deleteItem(rows, rowId)\n\n      return setRows(newRows);\n  }\n\n  const handleDeleteColumn = (columnId) => {\n      const newColumns = deleteItem(columns, columnId);\n\n      return setColumns(newColumns);\n  }\n  \n  const handleExportCSV = () => {\n    const csvContent = exportCSV(columns, rows);\n\n    downloadCSV(csvContent);\n  }\n\n  const hasColumns = Object.keys(columns).length;\n\n  return (\n    <AppContainer>\n      <GlobalStyle />\n      <div>\n        {!hasColumns && (\n          <div>\n            <CreateTableButton onClick={handelCreateTable} />\n          </div>\n        )}\n        {hasColumns && (\n          <Fragment>\n            <Table \n              rows={rows}\n              columns={columns}\n              onUpdateRowField={handleUpdateRowField}\n              onUpdateColumnField={handleUpdateColumnField}\n              onDeleteRow={handleDeleteRow}\n              onDeleteColumn={handleDeleteColumn}\n              onAddColumn={handleAddColumn}\n            />\n            <AddRowSection>\n              <AddButton onClick={handleAddRow} />\n            </AddRowSection>\n            <div>\n              <ExportCSVButton onClick={handleExportCSV} />\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}